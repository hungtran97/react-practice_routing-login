{"version":3,"sources":["avatar.jpeg","Home.tsx","Login.tsx","Toast.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["HomePage","props","state","email","localStorage","getItem","file","fileUrl","changeAvatar","bind","logout","e","reader","FileReader","readAsDataURL","onloadend","setState","result","this","setToast","type","message","setItem","Card","className","Body","Container","Row","Col","md","Image","style","overflow","maxHeight","src","avatar","roundedCircle","Form","Group","name","onChange","target","files","Button","size","onClick","to","React","Component","LoginPage","password","remember","validator","isLoggedIn","handleChange","onSubmit","validated","test","value","currentTarget","checked","preventDefault","console","log","controlId","Label","Control","placeholder","Text","Check","handleCheck","label","variant","Toast","Alert","toast","App","loggedIn","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"saAAe,G,MAAA,IAA0B,qC,OCsG1BA,E,kDAvFb,WAAYC,GAAa,IAAD,gCACtB,cAAMA,IACDC,MAAQ,CACXC,MAAK,UAAEC,aAAaC,QAAQ,gBAAvB,QAAmC,GACxCC,KAAM,KACNC,QAAS,IAEX,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,OAAS,EAAKA,OAAOD,KAAZ,gBARQ,E,gDAWxB,SAAaE,GAAc,IAAD,OACpBC,EAAS,IAAIC,WACXP,EAAOK,EAAE,GACfC,EAAOE,cAAcR,GACrBM,EAAOG,UAAY,WACjB,EAAKC,SAAL,2BACK,EAAKd,OADV,IAEEI,KAAMA,EACNC,QAASK,EAAOK,a,oBAKtB,WACEC,KAAKF,SAAL,2BACKE,KAAKhB,OADV,IAEEC,MAAO,MAETe,KAAKjB,MAAMkB,SAAS,CAClBC,KAAM,UACNC,QAAS,yBAEXjB,aAAakB,QAAQ,QAAS,M,oBAEhC,WAAU,IAAD,OACP,OAAKlB,aAAaC,QAAQ,SAMxB,qCACE,wCACA,cAACkB,EAAA,EAAD,CAAMC,UAAU,OAAhB,SACE,cAACD,EAAA,EAAKE,KAAN,UACE,eAACC,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKC,GAAG,KAAR,SACE,cAACC,EAAA,EAAD,CACEC,MAAO,CAACC,SAAU,SAAUC,UAAW,SACvCC,IAAKhB,KAAKhB,MAAMK,QAAUW,KAAKhB,MAAMK,QAAU4B,EAC/CC,eAAa,MAGjB,cAACR,EAAA,EAAD,CAAKC,GAAG,KAAR,SACE,cAACQ,EAAA,EAAD,UACE,cAACA,EAAA,EAAKC,MAAN,CAAYd,UAAU,gBAAtB,SACE,uBACEe,KAAK,SACLnB,KAAK,OACLoB,SAAU,SAAC7B,GAAD,OAAO,EAAKH,aAAaG,EAAE8B,OAAOC,mBAMtD,cAACf,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAKC,GAAG,KAAR,SACGzB,aAAaC,QAAQ,aAG1B,cAACsB,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAKC,GAAG,KAAR,SACE,cAACc,EAAA,EAAD,CAAQC,KAAK,KAAKC,QAAS,SAAClC,GAAD,OAAO,EAAKD,UAAvC,kCApCV,cAAC,IAAD,CAAUoC,GAAG,e,GAvCEC,IAAMC,W,QC8JdC,G,wDArJb,WAAYhD,GAAa,IAAD,8BACtB,cAAMA,IACDC,MAAQ,CACXC,MAAO,GACP+C,SAAU,GACVC,UAAU,EACVC,UAAW,CACTjD,MAAO,GACP+C,SAAU,IAEZG,YAAY,GAEd,EAAKC,aAAe,EAAKA,aAAa7C,KAAlB,gBACpB,EAAK8C,SAAW,EAAKA,SAAS9C,KAAd,gBAChB,EAAK+C,UAAY,EAAKA,UAAU/C,KAAf,gBAdK,E,gDAiBxB,SAAaE,GACX,GAAsB,UAAlBA,EAAE8B,OAAOF,KAAkB,CAC7B,IAAIlB,EAAU,GACR,yCAAyCoC,KAAK9C,EAAE8B,OAAOiB,SAC3DrC,EAAU,yBAEZH,KAAKF,SAAL,2BACKE,KAAKhB,OADV,IAEEC,MAAOQ,EAAE8B,OAAOiB,MAChBN,UAAU,2BACLlC,KAAKhB,MAAMkD,WADP,IAEPjD,MAAOkB,YAIXH,KAAKF,SAAL,2BACKE,KAAKhB,OADV,kBAEGS,EAAE8B,OAAOF,KAAO5B,EAAE8B,OAAOiB,W,yBAKhC,SAAY/C,GACVO,KAAKF,SAAL,2BACKE,KAAKhB,OADV,kBAEGS,EAAE8B,OAAOF,KAAO5B,EAAEgD,cAAcC,a,sBAIrC,SAASjD,GACPA,EAAEkD,iBACE3C,KAAKsC,aACPtC,KAAKjB,MAAMkB,SAAS,CAClBC,KAAM,UACNC,QAAS,wBAEXH,KAAKF,SAAL,2BACKE,KAAKhB,OADV,IAEEmD,YAAY,KAEdjD,aAAakB,QAAQ,QAASJ,KAAKhB,MAAMC,QAEzCe,KAAKjB,MAAMkB,SAAS,CAClBC,KAAM,SACNC,QAAS,mB,uBAMf,WACE,MAA2B,iBAArBH,KAAKhB,MAAMC,OAAoD,QAAxBe,KAAKhB,MAAMgD,UACtDhC,KAAKF,SAAL,2BACKE,KAAKhB,OADV,IAEEkD,UAAU,2BACLlC,KAAKhB,MAAMkD,WADP,IAEPF,SAAU,kCAGdY,QAAQC,IAAI7C,KAAKhB,QACV,IAEPgB,KAAKF,SAAL,2BACKE,KAAKhB,OADV,IAEEkD,UAAU,2BACLlC,KAAKhB,MAAMkD,WADP,IAEPF,SAAU,QAGdY,QAAQC,IAAI7C,KAAKhB,QACV,K,oBAIX,WACE,OAAIgB,KAAKhB,MAAMmD,WAEX,cAAC,IAAD,CAAUP,GAAG,UAIf,qCACE,yCACA,cAACvB,EAAA,EAAD,CAAMC,UAAU,aAAhB,SACE,cAACD,EAAA,EAAKE,KAAN,UACE,eAACY,EAAA,EAAD,CAAMkB,SAAUrC,KAAKqC,SAArB,UACE,eAAClB,EAAA,EAAKC,MAAN,CAAY0B,UAAU,QAAtB,UACE,cAAC3B,EAAA,EAAK4B,MAAN,sBACA,cAAC5B,EAAA,EAAK6B,QAAN,CACE9C,KAAK,OACLmB,KAAK,QACLmB,MAAOxC,KAAKhB,MAAMC,MAClBgE,YAAY,eACZ3B,SAAUtB,KAAKoC,eAEjB,cAACjB,EAAA,EAAK+B,KAAN,CAAW5C,UAAU,cAArB,SACGN,KAAKhB,MAAMkD,UAAUjD,WAG1B,eAACkC,EAAA,EAAKC,MAAN,CAAY0B,UAAU,WAAtB,UACE,cAAC3B,EAAA,EAAK4B,MAAN,yBACA,cAAC5B,EAAA,EAAK6B,QAAN,CACE9C,KAAK,WACLmB,KAAK,WACLmB,MAAOxC,KAAKhB,MAAMgD,SAClBiB,YAAY,MACZ3B,SAAUtB,KAAKoC,eAEjB,cAACjB,EAAA,EAAK+B,KAAN,CAAW5C,UAAU,cAArB,SACGN,KAAKhB,MAAMkD,UAAUF,cAG1B,cAACb,EAAA,EAAKC,MAAN,CAAY0B,UAAU,WAAtB,SACE,cAAC3B,EAAA,EAAKgC,MAAN,CACEjD,KAAK,WACLmB,KAAK,WACLqB,QAAS1C,KAAKhB,MAAMiD,SACpBX,SAAUtB,KAAKoD,YACfC,MAAM,mBAGV,cAAC5B,EAAA,EAAD,CAAQ6B,QAAQ,UAAUpD,KAAK,SAA/B,iC,GA3IU2B,IAAMC,Y,QCMfyB,G,wDAhBX,WAAYxE,GAAa,IAAD,6BACpB,cAAMA,GACN6D,QAAQC,IAAI9D,GAFQ,E,0CAKxB,WACI,OACI,qBAAKuB,UAAU,eAAf,SACI,cAACkD,EAAA,EAAD,CAAOF,QAAStD,KAAKjB,MAAM0E,MAAMvD,KAAjC,SACKF,KAAKjB,MAAM0E,MAAMtD,gB,GAVlB0B,IAAMC,YCwCX4B,G,wDAtCb,WAAY3E,GAAa,IAAD,8BACtB,cAAMA,IACDC,MAAQ,CACX2E,UAAU,EACVF,MAAO,CACLvD,KAAM,GACNC,QAAS,KAGb,EAAKF,SAAW,EAAKA,SAASV,KAAd,gBATM,E,4CAYxB,SAASkE,GACPb,QAAQC,IAAI7C,KAAKhB,OACjBgB,KAAKF,SAAL,2BACKE,KAAKhB,OADV,IAEEyE,a,oBAGJ,WACE,OACE,sBAAKnD,UAAU,MAAf,UACE,cAAC,EAAD,CAAOmD,MAAOzD,KAAKhB,MAAMyE,QACzB,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOG,KAAK,SAAZ,SACE,cAAC,EAAD,CAAW3D,SAAUD,KAAKC,aAE5B,cAAC,IAAD,CAAO2D,KAAK,IAAZ,SACE,cAAC,EAAD,CAAU3D,SAAUD,KAAKC,yB,GA9BrB4B,IAAMC,YCET+B,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ede91513.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/avatar.f4eb2a3e.jpeg\";","import React from 'react';\nimport { Card, Container, Row, Col, Image, Form, Button } from 'react-bootstrap';\nimport './Home.css'\nimport avatar from './avatar.jpeg'\nimport { Redirect } from 'react-router';\n\ninterface HomeProps {\n  setToast: any\n}\ninterface HomeState {\n  email: string\n  file: File | null\n  fileUrl: string\n}\nclass HomePage extends React.Component<HomeProps, HomeState> {\n  constructor(props: any) {\n    super(props)\n    this.state = {\n      email: localStorage.getItem('email') ?? '',\n      file: null,\n      fileUrl: ''\n    }\n    this.changeAvatar = this.changeAvatar.bind(this)\n    this.logout = this.logout.bind(this)\n  }\n\n  changeAvatar(e: FileList) {\n    let reader = new FileReader()\n    const file = e[0]\n    reader.readAsDataURL(file)\n    reader.onloadend = () => {\n      this.setState({\n        ...this.state,\n        file: file,\n        fileUrl: reader.result as string\n      })\n    }\n  }\n\n  logout() {\n    this.setState({\n      ...this.state,\n      email: ''\n    })\n    this.props.setToast({\n      type: 'success',\n      message: 'Logout Successfully!'\n    })\n    localStorage.setItem('email', '')\n  }\n  render() {\n    if (!localStorage.getItem('email')) {\n      return (\n        <Redirect to=\"/login\"></Redirect>\n      )\n    }\n    return (\n      <>\n        <h1> Home </h1>\n        <Card className=\"home\">\n          <Card.Body>\n            <Container>\n              <Row>\n                <Col md=\"12\">\n                  <Image\n                    style={{overflow: \"hidden\", maxHeight: \"100px\"}}\n                    src={this.state.fileUrl ? this.state.fileUrl : avatar} \n                    roundedCircle \n                  />\n                </Col>\n                <Col md=\"12\">\n                  <Form>\n                    <Form.Group className=\"avatar-select\">\n                      <input\n                        name=\"avatar\"\n                        type=\"file\"\n                        onChange={(e) => this.changeAvatar(e.target.files as FileList)}\n                       />\n                    </Form.Group>\n                  </Form>\n                </Col>\n              </Row>\n              <Row> \n                <Col md=\"12\">\n                  {localStorage.getItem('email')}\n                </Col>\n              </Row>\n              <Row> \n                <Col md=\"12\">\n                  <Button size=\"sm\" onClick={(e) => this.logout()}>\n                    Logout\n                  </Button>\n                </Col>\n              </Row>\n            </Container>\n          </Card.Body>\n        </Card>\n      </>\n    )\n  }\n}\n\nexport default HomePage;\n","import React from 'react';\nimport {\n  Card, Form, Button\n} from 'react-bootstrap'\nimport { Redirect } from 'react-router';\nimport './Login.css';\n\ninterface LoginProps {\n  setToast: any\n}\n\ninterface LoginState {\n  email: string\n  password: string\n  remember: boolean\n  validator: {\n    email: string\n    password: string\n  }\n  isLoggedIn: boolean\n}\n\nclass LoginPage extends React.Component<LoginProps, LoginState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      remember: false,\n      validator: {\n        email: '',\n        password: '',\n      },\n      isLoggedIn: false,\n    }\n    this.handleChange = this.handleChange.bind(this)\n    this.onSubmit = this.onSubmit.bind(this)\n    this.validated = this.validated.bind(this)\n  }\n\n  handleChange(e: React.ChangeEvent<HTMLInputElement>) {\n    if (e.target.name === \"email\") {\n      let message = ''\n      if (!(/^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/.test(e.target.value))) {\n        message = 'Email invalid format!'\n      }\n      this.setState({\n        ...this.state,\n        email: e.target.value,\n        validator: {\n          ...this.state.validator,\n          email: message\n        }\n      })\n    } else {\n      this.setState({\n        ...this.state,\n        [e.target.name]: e.target.value,\n      })\n    }\n  }\n\n  handleCheck(e: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      ...this.state,\n      [e.target.name]: e.currentTarget.checked\n    })\n  }\n\n  onSubmit(e: React.SyntheticEvent) {\n    e.preventDefault()\n    if (this.validated()) {\n      this.props.setToast({\n        type: 'success',\n        message: 'Login Successfully!'\n      })\n      this.setState({\n        ...this.state,\n        isLoggedIn: true\n      })\n      localStorage.setItem('email', this.state.email)\n    } else {\n      this.props.setToast({\n        type: 'danger',\n        message: 'Login Error!'\n      })\n    }\n\n  }\n\n  validated(): boolean {\n    if (!(this.state.email === \"admin@ows.vn\" && this.state.password === \"ows\")) {\n      this.setState({\n        ...this.state,\n        validator: {\n          ...this.state.validator,\n          password: 'Email or Password invalid!'\n        }\n      })\n      console.log(this.state)\n      return false\n    } else {\n      this.setState({\n        ...this.state,\n        validator: {\n          ...this.state.validator,\n          password: ''\n        }\n      })\n      console.log(this.state)\n      return true\n    }\n  }\n\n  render() {\n    if (this.state.isLoggedIn) {\n      return (\n        <Redirect to='/home'></Redirect>\n      )\n    }\n    return (\n      <>\n        <h1> Login </h1>\n        <Card className=\"form-login\">\n          <Card.Body>\n            <Form onSubmit={this.onSubmit}>\n              <Form.Group controlId=\"email\">\n                <Form.Label> Email </Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  name=\"email\"\n                  value={this.state.email}\n                  placeholder=\"admin@ows.vn\"\n                  onChange={this.handleChange}\n                />\n                <Form.Text className=\"text-danger\">\n                  {this.state.validator.email}\n                </Form.Text>\n              </Form.Group>\n              <Form.Group controlId=\"password\">\n                <Form.Label> Password </Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  name=\"password\"\n                  value={this.state.password}\n                  placeholder=\"ows\"\n                  onChange={this.handleChange}\n                />\n                <Form.Text className=\"text-danger\">\n                  {this.state.validator.password}\n                </Form.Text>\n              </Form.Group>\n              <Form.Group controlId=\"remember\">\n                <Form.Check\n                  type=\"checkbox\"\n                  name=\"remember\"\n                  checked={this.state.remember}\n                  onChange={this.handleCheck}\n                  label=\"remember me?\"\n                />\n              </Form.Group>\n              <Button variant=\"primary\" type=\"submit\">\n                Login\n              </Button>\n            </Form>\n          </Card.Body>\n        </Card>\n      </>\n    )\n  }\n}\n\nexport default LoginPage;\n","import React from 'react'\nimport { Alert } from 'react-bootstrap'\n\nimport './Toast.css'\n\ninterface ToastProps {\n    toast: {\n        type: string\n        message: string\n    }\n}\nclass Toast extends React.Component<ToastProps, any> {\n    constructor(props: any) {\n        super(props)\n        console.log(props)\n    }\n\n    render() {\n        return (\n            <div className=\"custom-toast\">\n                <Alert variant={this.props.toast.type}>\n                    {this.props.toast.message}\n                </Alert>\n            </div>\n        )\n    }\n}\n\nexport default Toast","import React from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport HomePage from './Home'\nimport LoginPage from './Login'\nimport Toast from './Toast'\nimport './App.css';\nimport { ToastProps } from 'react-bootstrap';\n\nclass App extends React.Component<any, any> {\n  constructor(props: any) {\n    super(props)\n    this.state = {\n      loggedIn: false,\n      toast: {\n        type: '',\n        message: ''\n      }\n    }\n    this.setToast = this.setToast.bind(this)\n  }\n\n  setToast(toast: ToastProps) {\n    console.log(this.state)\n    this.setState({\n      ...this.state,\n      toast\n    })\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <Toast toast={this.state.toast} />\n        <Router>\n          <Switch>\n            <Route path='/login'>\n              <LoginPage setToast={this.setToast}/>\n            </Route>\n            <Route path='/'>\n              <HomePage setToast={this.setToast}/>\n            </Route>\n          </Switch>\n        </Router>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}